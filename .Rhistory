r.version.string
R.version.string
quit
end
r
q
q()
q()
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique, numeic(1)
)
vapply(flags,unique, numeric(1)
)
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags%population, flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
data(cards)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
?plot
plot(x=cars$speed, y=cars$dist, xlab="speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars,  sub = "My Plot Subtitle")
?plot
plor(cars. col = "red")
plor(cars, col = "red")
plot(cars, col = "red")
plot(cars, col = 2")
ff
)
sdSDKCenkj
plot(cars, col = 2)
plat(cars, xlim = c(10,15))
plot(cars, xlim = c(10,15))
?points
plot(cars, pch =2)
data(mtcars)
?boxplot
boxplot(mtcars, mpg ~ cyl
)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
install.packages(c("xlsx", "XML", "jsonlite", "data.table"))
library(XML)
q()
library(rJava)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_40')
library(rJava)
library(xlsx)
q()
q()
library(swirl)
swirl()
sys.getlocate("LC_TIME")
sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package - lubridate)
help(package = lubridate)
this_day <- today()
this_day
month()
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_Date)
class(my_date
)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
time_moment <- (this_moment, hours = 22, minutes = 20, seconds = 55
time_moment <- (this_moment, hours = 22, minutes = 20, seconds = 55)
this_moment <- (this_moment, hours = 22, minutes = 20, seconds = 55)
this_moment <- update(this_moment, hours = 22, minutes = 20, seconds = 55)
this_moment
nyc <- now(tz="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes)55
arrive <- depart + hours(15) + minutes(55)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- tz(arrive, "Asia/Hong_Kong")
arrive <- tz(arrive, "Asia/Hong_Kong")
?tz
tz(arrive) <- "Asia/Hong_Kong"
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
q()
q()
q()
q()
load(url("http://bit.ly/dasi_nc"))
summary(nc)
gained_clean = na.omit(nc$gained)
n = length(gained_clean)
n
boot_means = rep(NA, 100)
for(i in 1:100){
boot_sample = sample(gained_clean, n, replace = TRUE)
boot_means[i] = mean(boot_sample)
}
hist(boot_means)
plot(boot_means)
dotplot(boot_means)
dotchart(boot_means)
quantile(boot_means, c(.05,.95))
stdev(boot_means)
std(boot_means)
sd(boot_means)
mean(boot_means)
source("http://bit.ly/dasi_inference")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.90, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "median", boot_method = "se")
inference(nc$fage, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
plot(nc$weight, nc$habit)
nc$habit
nc$weight, nc$habit
by(nc$weight, nc$habit, mean)
boxplot(nc$weight, nc$habit)
boxplot(nc$weight, nc$habit.category)
boxplot(nc$weight.category, nc$habit.category)
boxplot(nc$weight, nc$habit.category)
boxplot( nc$habit.category, nc$weight, nc$habit)
boxplot( nc$habit.category, nc$weight)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical", order = c("smoker","nonsmoker"))
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0, alternative = "twosided", method = "theoretical", order = c("smoker","nonsmoker"))
q()
source("http://bit.ly/dasi_inference")
load(url("http://www.openintro.org/stat/data/atheism.RData"))
str(atheism)
head(atheism,10)
us12 = subset(atheism, atheism$nationality == "United States" & atheism$year == "2012")
summary(us12)
inference(us12$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
spain = subset(atheism, atheism$nationality == "Spain")
inference(spain$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
?inference
?inference
??inference
inference(spain$response, spain$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(us12$response, spain$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(us12$response, us12$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
usa = subset(atheism, atheism$nationality == "USA")
usa = subset(atheism, atheism$nationality == "United States")
inference(usa$response, usa$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
q()
q()
q()
q()
setwd("~/GitHub/RepData_PeerAssessment1")
library(ggplot2)
library(doBy)
datCon <- unz(description = "activity.zip",filename = "activity.csv")
datRaw <- read.csv(datCon, header = TRUE, sep = ",")
nrow(datEaw)
nrow(datRaw)
nrow(na.omit(datRaw))
which(is.na(datRaw))
length(which(is.na(datRaw)))
datNAObs <- length(which(is.na(datRaw)))
?which
ind <- which(is.na(datRaw), arr.ind=TRUE)
ind
datRaw{ind]}
datRaw[ind]
datCon <- unz("activity.zip", filename="activity.csv")
datRaw <- read.csv(datCon, header=TRUE, sep=",")
datSubs  <- datRaw
ind <- which(is.na(datRaw), arr.ind=TRUE)
indNA <- which(is.na(datSubs), arr.ind=TRUE)
datSubs[indNA] <- colMeans(datSubs, na.rm=TRUE)[indNA[1,]]
?colMeans
head9indNA
head(indNA)
heqd(datSubs)
head(datSubs)
head(datRaw)
datSubs[indNA] <- colMeans(datSubs, na.rm=TRUE)[indNA[1,]]
datSubs[indNA] <- colMeans(datSubs, na.rm=TRUE)[indNA[,1]]
datSubs[indNA] <- colMeans(datSubs, na.rm=TRUE)[indNA[1,]]
datSubs[indNA] <- colMeans(datSubs, na.rm=TRUE)[indNA[,1]]
datSubs[indNA] <- colMeans(datSubs, na.rm=TRUE)[indNA[,2]]
indNA[,2]
datSubs[indNA] <- colMeans(datSubs, na.rm=TRUE)[indNA[,2]]
CM <- colMeans(datSubs, na.rm=TRUE)
CM <- colMeans(datSubs$steps, na.rm=TRUE)
CM <- colMeans(datSubs[,$steps], na.rm=TRUE)
CM <- colMeans(datSubs[,steps], na.rm=TRUE)
CM <- colMeans(datSubs[,1], na.rm=TRUE)
CM <- colMeans(datSubs[,2], na.rm=TRUE)
?colmean
?colMean
?colMeans
head(datSUbs)
head(datSubs)
datSubs[,1]
CM <- colMeans(datSubs[,1], na.rm=TRUE)
CM <- colMeans(datSubs, na.rm=TRUE, dims=1)
head(indNA)
CM <- colMeans(datSubs, na.rm=TRUE)
str(datSubs)
CM <- apply(datSubs,2,mean, na.rm=TRUE)
CM <- colMeans(datSubs, na.rm=TRUE)
head(indNA)
datIntervalMean <- summaryBy(steps ~ interval, data = datRaw, FUN = c(mean), na.rm=TRUE, keep.names=TRUE)
head(datIntervalMean)
datClean <- na.omit(datRaw)
?merge
?na.omit
sss <- !complete.cases(datRaw)
sss <- datRaw[!complete.cases(datRaw)]
subset(datRaw, is.na(steps))
datRawNA <- subset(datRaw, is.na(steps))
m <- merge(datRawNA, datIntervalMean, by="interval"
)
m
m1 <- merge( datIntervalMean, datRawNA, by="interval"
)
m1
m1 <- merge( datIntervalMean[, c("steps")] , datRawNA[, c("date", "interval")], by="interval"
)
?merge
m1 <- merge( datIntervalMean[, c("steps")] , datRawNA[, c("date", "interval")], by.x="interval", by.y = "interval")
m1 <- merge( datIntervalMean[, c("steps")] , datRawNA[, c("date")], by="interval")
head(datIntervalMean)
head(datRawNA)
subset(datRawNA, -steps)
subset(datRawNA, select = -steps)
datRawNA <- subset(datRawNA, select = -steps)
head(datRawNA
)
m1 <- merge( datIntervalMean[, c("steps")] , datRawNA, by="interval")
m1 <- merge( datIntervalMean , datRawNA, by="interval")
head(m1)
m1 <- merge(  datRawNA, datIntervalMean,  by="interval")
hed(m1)
head(m1)
m2 <- m1[, steps, date, interval]
m2 <- m1[, c("steps", "date", "interval")]
head(m2)
>cbind
?cbind
m3 <- rbind(m2, datClean)
head(m3)
datRawNA <- subset(datRaw, is.na(steps), select = -steps)
head(datRawNa)
head(datRawNA)
datRawNAIntMean <- merge(  datRawNA, datIntervalMean,  by="interval")
datNA <- subset(datRaw, is.na(steps), select = -steps)
datNAIntMean <- merge(  datNA, datIntervalMean,  by="interval")
m2 <- m1[, c("steps", "date", "interval")]
datNAIntMean <- datNIIntMean[, c("steps", "date", "interval")]
datNAIntMean <- datNAIntMean[, c("steps", "date", "interval")]
m3 <- rbind(m2, datClean)
datCleanFull <- rbind(datNAIntMean, datClean)
datDaySumFull <- summaryBy(steps ~ date, data = datCleanFull, FUN = c(sum), keep.names=TRUE)
datDaySumFull$date <- as.Date(datDaySumFull$date, format = "%Y-%m-%d")
datCleanFullMean <- mean(datDaySumFull$steps)
datCleanFullMedian <- median(datDaySumFull$steps)
ha <- ggplot(datDaySumFull, aes(x=date, y=steps))
ha1 <- ha + geom_histogram(binwidth=5, stat="identity")
ha2 <- ha1 + scale_x_date(breaks="2 weeks", labels=date_format("%Y-%m-%d") )
ha3 <- ha2 + theme_classic()
ha <- ggplot(datDaySumFull, aes(x=date, y=steps))
ha1 <- ha + geom_histogram(binwidth=5, stat="identity")
ha2 <- ha1 + scale_x_date(breaks="2 weeks", labels=date_format("%Y-%m-%d") )
library(scales)
ha2 <- ha1 + scale_x_date(breaks="2 weeks", labels=date_format("%Y-%m-%d") )
ha3 <- ha2 + theme_classic()
ha3
rm(datClean)
rm(datCleanFull)
rm(datNA)
rm(datRaw)
rm(datRawNA)
rm(datRawNAIntMean)
rm(datIntervalMean)
rm(datSubs)
rm(m)
rm(m1'')
rm(m1)
rm(m2)
rm(m3)
rm(CM)
rm(ind)
rmOindNA
rm(indNA)
rm(datCon)
rm)h1
rm(ha)
rm(ha1)
rm(ha2)
rm(ha3)
rm(ss)
rm(sss)
rm(datNAObs)
rm(datCleanFullMean)
rm(dalCleanFullMedian)
rm(datCleanFullMedian)
rm(datDaySummFull)
rm(datDaySumFull)
rm(datNAIntMean)
library(ggplot2)
library(doBy)
library(scales)
datCon <- unz("activity.zip", filename="activity.csv")
datRaw <- read.csv(datCon, header=TRUE, sep=",")
datClean <- na.omit(datRaw)
datDaySumClean <- summaryBy(steps ~ date, data = datClean, FUN = c(sum), keep.names=TRUE)
datDaySumClean$date <- as.Date(datDaySumClean$date, format = "%Y-%m-%d")
histSteps1
datDaySumClean <- summaryBy(steps ~ date, data = datClean, FUN = c(sum), keep.names=TRUE)
datDaySumClean$date <- as.Date(datDaySumClean$date, format = "%Y-%m-%d")
histSteps1 <- ggplot(datDaySumClean, aes(x=date, y=steps))
histSteps1 <- histSteps1 + geom_histogram(binwidth=5, stat="identity")
h2histSteps1 <- histSteps1 + scale_x_date(breaks="2 weeks", labels=date_format("%Y-%m-%d") )
histSteps1 <- histSteps1 + theme_classic()
histSteps1
histSteps1 <- ggplot(datDaySumClean, aes(x=date, y=steps))
histSteps1 <- histSteps1 + geom_histogram(binwidth=5, stat="identity")
histSteps1 <- histSteps1 + scale_x_date(breaks="2 weeks", labels=date_format("%Y-%m-%d") )
histSteps1 <- histSteps1 + theme_classic()
histSteps1
datCleanMean <- mean(datDaySumClean$steps)
datCleanMedian <- median(datDaySumClean$steps)
datIntervalMean <- summaryBy(steps ~ interval, data = datClean, FUN = c(mean), na.rm=TRUE, keep.names=TRUE)
lineInt1 <- ggplot(datIntervalMean, aes(x=interval, y=steps))
lineInt1 <- lineInt1 + geom_line()
lineInt1 <- lineInt1 + theme_classic()
lineInt1
IntervalMaxAvSteps <- datIntervalMean[order(datIntervalMean[,2],decreasing=TRUE)[1],1]
datNA <- subset(datRaw, is.na(steps), select = -steps)
datNAIntMean <- merge(datNA, datIntervalMean,  by="interval")
datNAIntMean <- datNAIntMean[, c("steps", "date", "interval")]
datCleanFull <- rbind(datNAIntMean, datClean)
datDaySumFull <- summaryBy(steps ~ date, data = datCleanFull, FUN = c(sum), keep.names=TRUE)
datDaySumFull$date <- as.Date(datDaySumFull$date, format = "%Y-%m-%d")
datCleanFullMean <- mean(datDaySumFull$steps)
datCleanFullMedian <- median(datDaySumFull$steps)
histSteps2 <- ggplot(datDaySumFull, aes(x=date, y=steps))
histSteps2 <- histSteps2 + geom_histogram(binwidth=5, stat="identity")
histSteps2 <- histSteps2 + scale_x_date(breaks="2 weeks", labels=date_format("%Y-%m-%d") )
histSteps2 <- histSteps2 + theme_classic()
histSteps2
?weekdays
weekdays(datClean$date)
weekdays(as.date(datClean$date))
weekdays(as.Date(datClean$date))
TheWeekend <- c('Saturday', 'Sunday')
datCleanFull$DayClass <-  factor((weekdays(as.Date(datCleanFull$date) %in% TheWeekend)+1L,
levels=1:2, labels=c('Weekday', 'Weekend'))
datCleanFull$DayClass <-  factor((weekdays(as.Date(datCleanFull$date)) %in% TheWeekend)+1L,
levels=1:2, labels=c('Weekday', 'Weekend'))
head(datCleanFull)
weekday("2012-11-10")
weekdays("2012-11-10")
weekdays(as.Date("2012-11-10"))
datIntervalMeanFull <- summaryBy(steps ~ interval + DayClass, data = datCleanFull, FUN = c(mean), na.rm=TRUE, keep.names=TRUE)
lineInt2 <- ggplot(datIntervalMeanFull, aes(x=interval, y=steps))
lineInt2 <- lineInt2+ geom_line()
lineInt2 <- lineInt2 + facet.grid(DayClass~.)
lineInt2 <- lineInt2 + theme_classic()
lineInt2
lineInt2 <- ggplot(datIntervalMeanFull, aes(x=interval, y=steps))
lineInt2 <- lineInt2+ geom_line()
lineInt2 <- lineInt2 + facet_grid(DayClass~.)
lineInt2 <- lineInt2 + theme_classic()
lineInt2
?print
datNA <- subset(datRaw, is.na(steps), select = -steps)
datNAIntMean <- merge(datNA, datIntervalMean,  by="interval")
datNAIntMean <- datNAIntMean[, c("steps", "date", "interval")]
datCleanFull <- rbind(datNAIntMean, datClean)
datDaySumFull <- summaryBy(steps ~ date, data = datCleanFull, FUN = c(sum), keep.names=TRUE)
datDaySumFull$date <- as.Date(datDaySumFull$date, format = "%Y-%m-%d")
datCleanFullMean <- mean(datDaySumFull$steps)
datCleanFullMedian <- median(datDaySumFull$steps)
histSteps2 <- ggplot(datDaySumFull, aes(x=date, y=steps))
histSteps2 <- histSteps2 + geom_histogram(binwidth=5, stat="identity")
histSteps2 <- histSteps2 + scale_x_date(breaks="2 weeks", labels=date_format("%Y-%m-%d") )
histSteps2 <- histSteps2 + theme_classic()
print(histSteps2)
```{r}
