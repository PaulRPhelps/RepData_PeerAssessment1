r.version.string
R.version.string
quit
end
r
q
q()
q()
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique, numeic(1)
)
vapply(flags,unique, numeric(1)
)
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags%population, flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
data(cards)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
?plot
plot(x=cars$speed, y=cars$dist, xlab="speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars,  sub = "My Plot Subtitle")
?plot
plor(cars. col = "red")
plor(cars, col = "red")
plot(cars, col = "red")
plot(cars, col = 2")
ff
)
sdSDKCenkj
plot(cars, col = 2)
plat(cars, xlim = c(10,15))
plot(cars, xlim = c(10,15))
?points
plot(cars, pch =2)
data(mtcars)
?boxplot
boxplot(mtcars, mpg ~ cyl
)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
install.packages(c("xlsx", "XML", "jsonlite", "data.table"))
library(XML)
q()
library(rJava)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_40')
library(rJava)
library(xlsx)
q()
q()
library(swirl)
swirl()
sys.getlocate("LC_TIME")
sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package - lubridate)
help(package = lubridate)
this_day <- today()
this_day
month()
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_Date)
class(my_date
)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
time_moment <- (this_moment, hours = 22, minutes = 20, seconds = 55
time_moment <- (this_moment, hours = 22, minutes = 20, seconds = 55)
this_moment <- (this_moment, hours = 22, minutes = 20, seconds = 55)
this_moment <- update(this_moment, hours = 22, minutes = 20, seconds = 55)
this_moment
nyc <- now(tz="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes)55
arrive <- depart + hours(15) + minutes(55)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- tz(arrive, "Asia/Hong_Kong")
arrive <- tz(arrive, "Asia/Hong_Kong")
?tz
tz(arrive) <- "Asia/Hong_Kong"
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
q()
q()
q()
q()
load(url("http://bit.ly/dasi_nc"))
summary(nc)
gained_clean = na.omit(nc$gained)
n = length(gained_clean)
n
boot_means = rep(NA, 100)
for(i in 1:100){
boot_sample = sample(gained_clean, n, replace = TRUE)
boot_means[i] = mean(boot_sample)
}
hist(boot_means)
plot(boot_means)
dotplot(boot_means)
dotchart(boot_means)
quantile(boot_means, c(.05,.95))
stdev(boot_means)
std(boot_means)
sd(boot_means)
mean(boot_means)
source("http://bit.ly/dasi_inference")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.90, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "perc")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
inference(nc$gained, type = "ci", method = "simulation", conflevel = 0.95, est = "median", boot_method = "se")
inference(nc$fage, type = "ci", method = "simulation", conflevel = 0.95, est = "mean", boot_method = "se")
plot(nc$weight, nc$habit)
nc$habit
nc$weight, nc$habit
by(nc$weight, nc$habit, mean)
boxplot(nc$weight, nc$habit)
boxplot(nc$weight, nc$habit.category)
boxplot(nc$weight.category, nc$habit.category)
boxplot(nc$weight, nc$habit.category)
boxplot( nc$habit.category, nc$weight, nc$habit)
boxplot( nc$habit.category, nc$weight)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0, alternative = "twosided", method = "theoretical", order = c("smoker","nonsmoker"))
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0, alternative = "twosided", method = "theoretical", order = c("smoker","nonsmoker"))
q()
source("http://bit.ly/dasi_inference")
load(url("http://www.openintro.org/stat/data/atheism.RData"))
str(atheism)
head(atheism,10)
us12 = subset(atheism, atheism$nationality == "United States" & atheism$year == "2012")
summary(us12)
inference(us12$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
spain = subset(atheism, atheism$nationality == "Spain")
inference(spain$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
?inference
?inference
??inference
inference(spain$response, spain$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(us12$response, spain$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(us12$response, us12$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
usa = subset(atheism, atheism$nationality == "USA")
usa = subset(atheism, atheism$nationality == "United States")
inference(usa$response, usa$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
q()
q()
q()
q()
```{r}
library(ggplot2)
library(doBy)
datCon <- unz(description = "activity.zip",filename = "activity.csv")
datRaw <- read.csv(datCon, header = TRUE, sep = ",")
setwd("~/GitHub/RepData_PeerAssessment1")
datCon <- unz(description = "activity.zip",filename = "activity.csv")
datRaw <- read.csv(datCon, header = TRUE, sep = ",")
datDaySum <- summaryBy(steps ~ date, data = datRaw, FUN = c(sum), na.rm=TRUE, keep.names=TRUE)
datIntervalMean <- summaryBy(steps ~ interval, data = datRaw, FUN = c(sum), na.rm=TRUE, keep.names=TRUE)
head(datIntervalMean)
head(datIntervalMean,50)
head(datIntervalMean,200)
datIntervalMean <- summaryBy(steps ~ interval, data = datRaw, FUN = c(mean), na.rm=TRUE, keep.names=TRUE)
head(datIntervalMean,200)
l <- ggplot(datIntervalMean, aes(x=interval, y=steps))
l1 <- l + geom_line
l2 <- l1 + theme_classic()
l <- ggplot(datIntervalMean, aes(x=interval, y=steps))
l1 <- l + geom_line
l1 <- l + geom_line()
l1
l2 <- l1 + theme_classic()
l2
order(datIntervalMean[,2],decreasing=TRUE)[1]
order(datIntervalMean[,1],decreasing=TRUE)[1]
order(datIntervalMean[,2],decreasing=TRUE)[1]
which.max( datIntervalMean[,2] )
datIntervalMean[which.max( datIntervalMean[,2] ),1]
datIntervalMean[order(datIntervalMean[,2],decreasing=TRUE)[1],1]
q()
